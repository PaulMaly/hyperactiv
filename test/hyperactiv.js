!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.hyperactiv=t()}(this,function(){"use strict";const e=[],t=new WeakMap,n={timeout:null,queue:new Set,process:()=>{for(let e of n.queue)e();n.queue.clear(),n.timeout=null},enqueue:e=>{null===n.timeout&&(n.timeout=setTimeout(n.process,0)),n.queue.add(e)}};return{observe:function(u,{props:o=null,ignore:s=null,batch:r=!1}={}){return t.set(u,new Map),new Proxy(u,{get(n,r){const i=t.get(u);if(o&&!o.includes(r)||s&&s.includes(r))return u[r];i.has(r)||i.set(r,new Set);const c=i.get(r);return e.length>0&&c.add(e[0]),i.set(r,c),u[r]},set(e,i,c){const l=t.get(u);if(u[i]===c)return!0;if(u[i]=c,o&&!o.includes(i)||s&&s.includes(i))return!0;if(l.has(i)){const e=l.get(i);for(let t of e)t.__disposed?e.delete(t):r?n.enqueue(t):t()}return!0}})},computed:function(t,{autoRun:n=!0,callback:u=null}={}){const o=new Proxy(t,{apply:function(t,n,s){const r=(r=null)=>{e.unshift(u||o);const i=r?r():t.apply(n,s);return e.shift(),i};return s.push({computeAsync:e=>r(e)}),r()}});return n&&o(),o},dispose:e=>e.__disposed=!0}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHlwZXJhY3Rpdi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXB1dGVkU3RhY2sgPSBbXVxuY29uc3Qgb2JzZXJ2ZXJzTWFwID0gbmV3IFdlYWtNYXAoKVxuXG5jb25zdCBjb21wdXRlZCA9IGZ1bmN0aW9uKGZ1biwge8KgYXV0b1J1biA9IHRydWUsIGNhbGxiYWNrID0gbnVsbCB9ID0ge30pIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShmdW4sIHtcbiAgICAgICAgYXBwbHk6IGZ1bmN0aW9uKHRhcmdldCwgdGhpc0FyZywgYXJnc0xpc3QpIHtcbiAgICAgICAgICAgIGNvbnN0IHBlcmZvcm1Db21wdXRhdGlvbiA9IChmdW4gPSBudWxsKSA9PiB7XG4gICAgICAgICAgICAgICAgY29tcHV0ZWRTdGFjay51bnNoaWZ0KGNhbGxiYWNrIHx8IHByb3h5KVxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGZ1biA/IGZ1bigpIDogdGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3NMaXN0KVxuICAgICAgICAgICAgICAgIGNvbXB1dGVkU3RhY2suc2hpZnQoKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXJnc0xpc3QucHVzaCh7XG4gICAgICAgICAgICAgICAgY29tcHV0ZUFzeW5jOiB0YXJnZXQgPT4gcGVyZm9ybUNvbXB1dGF0aW9uKHRhcmdldClcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHJldHVybiBwZXJmb3JtQ29tcHV0YXRpb24oKVxuICAgICAgICB9XG4gICAgfSlcbiAgICBpZihhdXRvUnVuKSB7IHByb3h5KCkgfVxuICAgIHJldHVybiBwcm94eVxufVxuXG5jb25zdCBkaXNwb3NlID0gXyA9PiBfLl9fZGlzcG9zZWQgPSB0cnVlXG5cbmNvbnN0IGJhdGNoZXIgPcKge1xuICAgIHRpbWVvdXQ6IG51bGwsXG4gICAgcXVldWU6IG5ldyBTZXQoKSxcbiAgICBwcm9jZXNzOiAoKSA9PiB7XG4gICAgICAgIGZvcihsZXQgdGFzayBvZiBiYXRjaGVyLnF1ZXVlKVxuICAgICAgICAgICAgdGFzaygpXG4gICAgICAgIGJhdGNoZXIucXVldWUuY2xlYXIoKVxuICAgICAgICBiYXRjaGVyLnRpbWVvdXQgPSBudWxsXG4gICAgfSxcbiAgICBlbnF1ZXVlOiB0YXNrID0+IHtcbiAgICAgICAgaWYoYmF0Y2hlci50aW1lb3V0ID09PSBudWxsKVxuICAgICAgICAgICAgYmF0Y2hlci50aW1lb3V0ID0gc2V0VGltZW91dChiYXRjaGVyLnByb2Nlc3MsIDApXG4gICAgICAgIGJhdGNoZXIucXVldWUuYWRkKHRhc2spXG4gICAgfVxufVxuXG5jb25zdCBvYnNlcnZlID0gZnVuY3Rpb24ob2JqLCB7IHByb3BzID0gbnVsbCwgaWdub3JlID0gbnVsbCwgYmF0Y2ggPSBmYWxzZSB9ID0ge30pIHtcbiAgICBvYnNlcnZlcnNNYXAuc2V0KG9iaiwgbmV3IE1hcClcblxuICAgIHJldHVybiBuZXcgUHJveHkob2JqLCB7XG4gICAgICAgIGdldChfLCBwcm9wKSB7XG4gICAgICAgICAgICBjb25zdCBvYnNlcnZlck1hcCA9IG9ic2VydmVyc01hcC5nZXQob2JqKVxuXG4gICAgICAgICAgICBpZigocHJvcHMgJiYgIXByb3BzLmluY2x1ZGVzKHByb3ApKSB8fCAoaWdub3JlICYmIGlnbm9yZS5pbmNsdWRlcyhwcm9wKSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9ialtwcm9wXVxuXG4gICAgICAgICAgICBpZighb2JzZXJ2ZXJNYXAuaGFzKHByb3ApKSB7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXJNYXAuc2V0KHByb3AsIG5ldyBTZXQoKSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgc2V0ID0gb2JzZXJ2ZXJNYXAuZ2V0KHByb3ApXG4gICAgICAgICAgICBpZihjb21wdXRlZFN0YWNrLmxlbmd0aCA+IDApXG4gICAgICAgICAgICAgICAgc2V0LmFkZChjb21wdXRlZFN0YWNrWzBdKVxuICAgICAgICAgICAgb2JzZXJ2ZXJNYXAuc2V0KHByb3AsIHNldClcblxuICAgICAgICAgICAgcmV0dXJuIG9ialtwcm9wXVxuICAgICAgICB9LFxuICAgICAgICBzZXQoXywgcHJvcCwgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyTWFwID0gb2JzZXJ2ZXJzTWFwLmdldChvYmopXG5cbiAgICAgICAgICAgIGlmKG9ialtwcm9wXSA9PT0gdmFsdWUpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcblxuICAgICAgICAgICAgb2JqW3Byb3BdID0gdmFsdWVcblxuICAgICAgICAgICAgaWYoKHByb3BzICYmICFwcm9wcy5pbmNsdWRlcyhwcm9wKSkgfHwgKGlnbm9yZSAmJiBpZ25vcmUuaW5jbHVkZXMocHJvcCkpKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXG5cbiAgICAgICAgICAgIGlmKG9ic2VydmVyTWFwLmhhcyhwcm9wKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRlcGVuZGVudHMgPSBvYnNlcnZlck1hcC5nZXQocHJvcClcbiAgICAgICAgICAgICAgICBmb3IobGV0IGRlcGVuZGVudCBvZiBkZXBlbmRlbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmKGRlcGVuZGVudC5fX2Rpc3Bvc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXBlbmRlbnRzLmRlbGV0ZShkZXBlbmRlbnQpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihiYXRjaCkgYmF0Y2hlci5lbnF1ZXVlKGRlcGVuZGVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgZGVwZW5kZW50KClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgb2JzZXJ2ZSxcbiAgICBjb21wdXRlZCxcbiAgICBkaXNwb3NlXG59Il0sIm5hbWVzIjpbImNvbXB1dGVkU3RhY2siLCJvYnNlcnZlcnNNYXAiLCJXZWFrTWFwIiwiYmF0Y2hlciIsInRpbWVvdXQiLCJxdWV1ZSIsIlNldCIsInByb2Nlc3MiLCJ0YXNrIiwiY2xlYXIiLCJlbnF1ZXVlIiwic2V0VGltZW91dCIsImFkZCIsIm9ic2VydmUiLCJvYmoiLCJwcm9wcyIsImlnbm9yZSIsImJhdGNoIiwic2V0IiwiTWFwIiwiUHJveHkiLCJbb2JqZWN0IE9iamVjdF0iLCJfIiwicHJvcCIsIm9ic2VydmVyTWFwIiwiZ2V0IiwiaW5jbHVkZXMiLCJoYXMiLCJsZW5ndGgiLCJ2YWx1ZSIsImRlcGVuZGVudHMiLCJkZXBlbmRlbnQiLCJfX2Rpc3Bvc2VkIiwiZGVsZXRlIiwiY29tcHV0ZWQiLCJmdW4iLCJhdXRvUnVuIiwiY2FsbGJhY2siLCJwcm94eSIsImFwcGx5IiwidGFyZ2V0IiwidGhpc0FyZyIsImFyZ3NMaXN0IiwicGVyZm9ybUNvbXB1dGF0aW9uIiwidW5zaGlmdCIsInJlc3VsdCIsInNoaWZ0IiwicHVzaCIsImNvbXB1dGVBc3luYyIsImRpc3Bvc2UiXSwibWFwcGluZ3MiOiJzTEFBQSxNQUFNQSxLQUNBQyxFQUFlLElBQUlDLFFBeUJuQkMsR0FDRkMsUUFBUyxLQUNUQyxNQUFPLElBQUlDLElBQ1hDLFFBQVMsS0FDTCxJQUFJLElBQUlDLEtBQVFMLEVBQVFFLE1BQ3BCRyxJQUNKTCxFQUFRRSxNQUFNSSxRQUNkTixFQUFRQyxRQUFVLE1BRXRCTSxRQUFTRixJQUNrQixPQUFwQkwsRUFBUUMsVUFDUEQsRUFBUUMsUUFBVU8sV0FBV1IsRUFBUUksUUFBUyxJQUNsREosRUFBUUUsTUFBTU8sSUFBSUosWUFxRHRCSyxRQWpEWSxTQUFTQyxHQUFLQyxNQUFFQSxFQUFRLEtBQUlDLE9BQUVBLEVBQVMsS0FBSUMsTUFBRUEsR0FBUSxPQUdqRSxPQUZBaEIsRUFBYWlCLElBQUlKLEVBQUssSUFBSUssS0FFbkIsSUFBSUMsTUFBTU4sR0FDYk8sSUFBSUMsRUFBR0MsR0FDSCxNQUFNQyxFQUFjdkIsRUFBYXdCLElBQUlYLEdBRXJDLEdBQUlDLElBQVVBLEVBQU1XLFNBQVNILElBQVdQLEdBQVVBLEVBQU9VLFNBQVNILEdBQzlELE9BQU9ULEVBQUlTLEdBRVhDLEVBQVlHLElBQUlKLElBQ2hCQyxFQUFZTixJQUFJSyxFQUFNLElBQUlqQixLQUc5QixNQUFNWSxFQUFNTSxFQUFZQyxJQUFJRixHQUs1QixPQUpHdkIsRUFBYzRCLE9BQVMsR0FDdEJWLEVBQUlOLElBQUlaLEVBQWMsSUFDMUJ3QixFQUFZTixJQUFJSyxFQUFNTCxHQUVmSixFQUFJUyxJQUVmRixJQUFJQyxFQUFHQyxFQUFNTSxHQUNULE1BQU1MLEVBQWN2QixFQUFhd0IsSUFBSVgsR0FFckMsR0FBR0EsRUFBSVMsS0FBVU0sRUFDYixPQUFPLEVBSVgsR0FGQWYsRUFBSVMsR0FBUU0sRUFFUmQsSUFBVUEsRUFBTVcsU0FBU0gsSUFBV1AsR0FBVUEsRUFBT1UsU0FBU0gsR0FDOUQsT0FBTyxFQUVYLEdBQUdDLEVBQVlHLElBQUlKLEdBQU8sQ0FDdEIsTUFBTU8sRUFBYU4sRUFBWUMsSUFBSUYsR0FDbkMsSUFBSSxJQUFJUSxLQUFhRCxFQUNkQyxFQUFVQyxXQUNURixFQUFXRyxPQUFPRixHQUVmZCxFQUFPZCxFQUFRTyxRQUFRcUIsR0FDckJBLElBSWpCLE9BQU8sTUFPZkcsU0F6RmEsU0FBU0MsR0FBS0MsUUFBRUEsR0FBVSxFQUFJQyxTQUFFQSxFQUFXLFVBQ3hELE1BQU1DLEVBQVEsSUFBSWxCLE1BQU1lLEdBQ3BCSSxNQUFPLFNBQVNDLEVBQVFDLEVBQVNDLEdBQzdCLE1BQU1DLEVBQXFCLENBQUNSLEVBQU0sUUFDOUJuQyxFQUFjNEMsUUFBUVAsR0FBWUMsR0FDbEMsTUFBTU8sRUFBU1YsRUFBTUEsSUFBUUssRUFBT0QsTUFBTUUsRUFBU0MsR0FFbkQsT0FEQTFDLEVBQWM4QyxRQUNQRCxHQU9YLE9BSkFILEVBQVNLLE1BQ0xDLGFBQWNSLEdBQVVHLEVBQW1CSCxLQUd4Q0csT0FJZixPQURHUCxHQUFXRSxJQUNQQSxHQXdFUFcsUUFyRVkzQixHQUFLQSxFQUFFVSxZQUFhIn0=
