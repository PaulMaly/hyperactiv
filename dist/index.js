!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.hyperactiv=t()}(this,function(){"use strict";const e=[],t=new WeakMap,n=function(e){return e&&"object"==typeof e},r=Array.isArray,u=function(e,t,n){Object.defineProperty(e,"__key",{value:t,enumerable:!1,configurable:!0}),Object.defineProperty(e,"__parent",{value:n,enumerable:!1,configurable:!0})},o={timeout:null,queue:new Set,process(){for(const e of o.queue)e();o.queue.clear(),o.timeout=null},enqueue(e){null===o.timeout&&(o.timeout=setTimeout(o.process,0)),o.queue.add(e)}},i=function(s,c={}){const{props:l=null,ignore:f=null,batch:d=!1,deep:a=!1,handler:p=null,bind:_=!1}=c;if(s.__observed)return s;t.set(s,new Map),a&&Object.entries(s).forEach(function([e,t]){n(t)&&(s[e]=i(t,c),p&&u(s[e],e,s))});const y=new Proxy(s,{get(n,r){if("__observed"===r)return!0;if((!l||l.includes(r))&&(!f||!f.includes(r))&&e.length){const n=t.get(s);n.has(r)||n.set(r,new Set),n.get(r).add(e[0])}return s[r]},set(_,b,h){const g=t.get(s);if((!r(s)||"length"!==b)&&s[b]===h)return!0;if(s[b]=a&&n(h)?i(h,c):h,p&&a&&n(h)&&u(s[b],b,s),p){const e=[b];let t=s;for(;t.__key&&t.__parent;)e.unshift(t.__key),t=t.__parent;p(e,h,y)}if((!l||l.includes(b))&&(!f||!f.includes(b))&&g.has(b)){const t=g.get(b);for(const n of t)n.__disposed?t.delete(n):n!==e[0]&&(d?o.enqueue(n):n())}return!0},deleteProperty:(e,t)=>(e[t]&&p&&(delete e[t].__key,delete e[t].__parent),delete e[t],!0)});return _&&n(s)&&Object.getOwnPropertyNames(s).forEach(e=>{"function"==typeof s[e]&&(s[e]=s[e].bind(y))}),y};return{observe:i,computed:function(t,{autoRun:n=!0,callback:r=null,bind:u=null}={}){const o=new Proxy(t,{apply(t,n,i){const s=function(s=null){e.unshift(r||o);const c=s?s():t.apply(u||n,i);return e.shift(),c};return i.push({computeAsync:function(e){return s(e)}}),s()}});return n&&o(),o},dispose:function(e){return e.__disposed=!0},handlers:{write:function(e){if(!e)throw new Error("writeHandler needs a proper target !");return function(t,n){n=JSON.parse(JSON.stringify(n));for(let n=0;n<t.length-1;n++){const u=t[n],o=t[n+1];void 0===e[u]&&(e[u]=(r=o,Number.isInteger(Number.parseInt(r))?[]:{})),e=e[u]}var r;e[t[t.length-1]]=n}}}}});
