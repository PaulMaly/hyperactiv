!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.hyperactiv=t()}(this,function(){"use strict";const e=[],t=new WeakMap,n=e=>e&&"object"==typeof e,u=Array.isArray,o={timeout:null,queue:new Set,process(){for(const e of o.queue)e();o.queue.clear(),o.timeout=null},enqueue(e){null===o.timeout&&(o.timeout=setTimeout(o.process,0)),o.queue.add(e)}},s=function(r,c={}){const{props:i=null,ignore:l=null,batch:d=!1,deep:f=!1}=c;return r.__observed?r:(t.set(r,new Map),f&&Object.entries(r).forEach(([e,t])=>{n(t)&&(r[e]=s(t,c))}),new Proxy(r,{get(n,u){if("__observed"===u)return!0;if((!i||i.includes(u))&&(!l||!l.includes(u))&&e.length){const n=t.get(r);n.has(u)||n.set(u,new Set),n.get(u).add(e[0])}return r[u]},set(p,a,y){const h=t.get(r);if((!u(r)||"length"!==a)&&r[a]===y)return!0;if(r[a]=f&&n(y)?s(y,c):y,(!i||i.includes(a))&&(!l||!l.includes(a))&&h.has(a)){const t=h.get(a);for(const n of t)n.__disposed?t.delete(n):n!==e[0]&&(d?o.enqueue(n):n())}return!0}}))};return{observe:s,computed:function(t,{autoRun:n=!0,callback:u=null}={}){const o=new Proxy(t,{apply(t,n,s){const r=(r=null)=>{e.unshift(u||o);const c=r?r():t.apply(n,s);return e.shift(),c};return s.push({computeAsync:e=>r(e)}),r()}});return n&&o(),o},dispose:e=>e.__disposed=!0}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHlwZXJhY3Rpdi5tYXAuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wdXRlZFN0YWNrID0gW11cbmNvbnN0IG9ic2VydmVyc01hcCA9IG5ldyBXZWFrTWFwKClcblxuY29uc3QgaXNPYmogPSBvID0+IG8gJiYgdHlwZW9mIG8gPT09ICdvYmplY3QnXG5jb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheVxuXG5jb25zdCBjb21wdXRlZCA9IGZ1bmN0aW9uKGZ1biwgeyBhdXRvUnVuID0gdHJ1ZSwgY2FsbGJhY2sgPSBudWxsIH0gPSB7fSkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KGZ1biwge1xuICAgICAgICBhcHBseSh0YXJnZXQsIHRoaXNBcmcsIGFyZ3NMaXN0KSB7XG4gICAgICAgICAgICBjb25zdCBwZXJmb3JtQ29tcHV0YXRpb24gPSAoZnVuID0gbnVsbCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbXB1dGVkU3RhY2sudW5zaGlmdChjYWxsYmFjayB8fCBwcm94eSlcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBmdW4gPyBmdW4oKSA6IHRhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzTGlzdClcbiAgICAgICAgICAgICAgICBjb21wdXRlZFN0YWNrLnNoaWZ0KClcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFyZ3NMaXN0LnB1c2goe1xuICAgICAgICAgICAgICAgIGNvbXB1dGVBc3luYzogdGFyZ2V0ID0+IHBlcmZvcm1Db21wdXRhdGlvbih0YXJnZXQpXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICByZXR1cm4gcGVyZm9ybUNvbXB1dGF0aW9uKClcbiAgICAgICAgfVxuICAgIH0pXG4gICAgaWYoYXV0b1J1bikgcHJveHkoKVxuICAgIHJldHVybiBwcm94eVxufVxuXG5jb25zdCBkaXNwb3NlID0gXyA9PiBfLl9fZGlzcG9zZWQgPSB0cnVlXG5cbmNvbnN0IGJhdGNoZXIgPSB7XG4gICAgdGltZW91dDogbnVsbCxcbiAgICBxdWV1ZTogbmV3IFNldCgpLFxuICAgIHByb2Nlc3MoKSB7XG4gICAgICAgIGZvcihjb25zdCB0YXNrIG9mIGJhdGNoZXIucXVldWUpIHRhc2soKVxuICAgICAgICBiYXRjaGVyLnF1ZXVlLmNsZWFyKClcbiAgICAgICAgYmF0Y2hlci50aW1lb3V0ID0gbnVsbFxuICAgIH0sXG4gICAgZW5xdWV1ZSh0YXNrKSB7XG4gICAgICAgIGlmKGJhdGNoZXIudGltZW91dCA9PT0gbnVsbClcbiAgICAgICAgICAgIGJhdGNoZXIudGltZW91dCA9IHNldFRpbWVvdXQoYmF0Y2hlci5wcm9jZXNzLCAwKVxuICAgICAgICBiYXRjaGVyLnF1ZXVlLmFkZCh0YXNrKVxuICAgIH1cbn1cblxuY29uc3Qgb2JzZXJ2ZSA9IGZ1bmN0aW9uKG9iaiwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3Qge1xuICAgICAgICBwcm9wcyA9IG51bGwsIGlnbm9yZSA9IG51bGwsIGJhdGNoID0gZmFsc2UsIGRlZXAgPSBmYWxzZVxuICAgIH0gPSBvcHRpb25zXG5cbiAgICBpZihvYmouX19vYnNlcnZlZCkgcmV0dXJuIG9ialxuXG4gICAgb2JzZXJ2ZXJzTWFwLnNldChvYmosIG5ldyBNYXAoKSlcbiAgICBkZWVwICYmIE9iamVjdC5lbnRyaWVzKG9iaikuZm9yRWFjaCgoW2tleSwgdmFsXSkgPT4ge1xuICAgICAgICBpZihpc09iaih2YWwpKSBvYmpba2V5XSA9IG9ic2VydmUodmFsLCBvcHRpb25zKVxuICAgIH0pXG5cbiAgICByZXR1cm4gbmV3IFByb3h5KG9iaiwge1xuICAgICAgICBnZXQoXywgcHJvcCkge1xuICAgICAgICAgICAgaWYocHJvcCA9PT0gJ19fb2JzZXJ2ZWQnKSByZXR1cm4gdHJ1ZVxuXG4gICAgICAgICAgICBpZigoIXByb3BzIHx8IHByb3BzLmluY2x1ZGVzKHByb3ApKSAmJiAoIWlnbm9yZSB8fCAhaWdub3JlLmluY2x1ZGVzKHByb3ApKSkge1xuICAgICAgICAgICAgICAgIGlmKGNvbXB1dGVkU3RhY2subGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyTWFwID0gb2JzZXJ2ZXJzTWFwLmdldChvYmopXG4gICAgICAgICAgICAgICAgICAgIGlmKCFvYnNlcnZlck1hcC5oYXMocHJvcCkpXG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlck1hcC5zZXQocHJvcCwgbmV3IFNldCgpKVxuICAgICAgICAgICAgICAgICAgICBvYnNlcnZlck1hcC5nZXQocHJvcCkuYWRkKGNvbXB1dGVkU3RhY2tbMF0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gb2JqW3Byb3BdXG4gICAgICAgIH0sXG4gICAgICAgIHNldChfLCBwcm9wLCB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3Qgb2JzZXJ2ZXJNYXAgPSBvYnNlcnZlcnNNYXAuZ2V0KG9iailcblxuICAgICAgICAgICAgaWYoKCFpc0FycmF5KG9iaikgfHwgcHJvcCAhPT0gJ2xlbmd0aCcpICYmIG9ialtwcm9wXSA9PT0gdmFsdWUpIHJldHVybiB0cnVlXG4gICAgICAgICAgICBvYmpbcHJvcF0gPSBkZWVwICYmIGlzT2JqKHZhbHVlKSA/IG9ic2VydmUodmFsdWUsIG9wdGlvbnMpIDogdmFsdWVcblxuICAgICAgICAgICAgaWYoKCFwcm9wcyB8fCBwcm9wcy5pbmNsdWRlcyhwcm9wKSkgJiYgKCFpZ25vcmUgfHwgIWlnbm9yZS5pbmNsdWRlcyhwcm9wKSkpIHtcbiAgICAgICAgICAgICAgICBpZihvYnNlcnZlck1hcC5oYXMocHJvcCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVwZW5kZW50cyA9IG9ic2VydmVyTWFwLmdldChwcm9wKVxuICAgICAgICAgICAgICAgICAgICBmb3IoY29uc3QgZGVwZW5kZW50IG9mIGRlcGVuZGVudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGRlcGVuZGVudC5fX2Rpc3Bvc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVwZW5kZW50cy5kZWxldGUoZGVwZW5kZW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKGRlcGVuZGVudCAhPT0gY29tcHV0ZWRTdGFja1swXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGJhdGNoKSBiYXRjaGVyLmVucXVldWUoZGVwZW5kZW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgZGVwZW5kZW50KClcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgb2JzZXJ2ZSxcbiAgICBjb21wdXRlZCxcbiAgICBkaXNwb3NlXG59Il0sIm5hbWVzIjpbImNvbXB1dGVkU3RhY2siLCJvYnNlcnZlcnNNYXAiLCJXZWFrTWFwIiwiaXNPYmoiLCJvIiwiaXNBcnJheSIsIkFycmF5IiwiYmF0Y2hlciIsInRpbWVvdXQiLCJxdWV1ZSIsIlNldCIsIltvYmplY3QgT2JqZWN0XSIsInRhc2siLCJjbGVhciIsInNldFRpbWVvdXQiLCJwcm9jZXNzIiwiYWRkIiwib2JzZXJ2ZSIsIm9iaiIsIm9wdGlvbnMiLCJwcm9wcyIsImlnbm9yZSIsImJhdGNoIiwiZGVlcCIsIl9fb2JzZXJ2ZWQiLCJzZXQiLCJNYXAiLCJPYmplY3QiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImtleSIsInZhbCIsIlByb3h5IiwiXyIsInByb3AiLCJpbmNsdWRlcyIsImxlbmd0aCIsIm9ic2VydmVyTWFwIiwiZ2V0IiwiaGFzIiwidmFsdWUiLCJkZXBlbmRlbnRzIiwiZGVwZW5kZW50IiwiX19kaXNwb3NlZCIsImRlbGV0ZSIsImVucXVldWUiLCJjb21wdXRlZCIsImZ1biIsImF1dG9SdW4iLCJjYWxsYmFjayIsInByb3h5IiwidGFyZ2V0IiwidGhpc0FyZyIsImFyZ3NMaXN0IiwicGVyZm9ybUNvbXB1dGF0aW9uIiwidW5zaGlmdCIsInJlc3VsdCIsImFwcGx5Iiwic2hpZnQiLCJwdXNoIiwiY29tcHV0ZUFzeW5jIiwiZGlzcG9zZSJdLCJtYXBwaW5ncyI6InNMQUFBLE1BQU1BLEtBQ0FDLEVBQWUsSUFBSUMsUUFFbkJDLEVBQVFDLEdBQUtBLEdBQWtCLGlCQUFOQSxFQUN6QkMsRUFBVUMsTUFBTUQsUUF5QmhCRSxHQUNGQyxRQUFTLEtBQ1RDLE1BQU8sSUFBSUMsSUFDWEMsVUFDSSxJQUFJLE1BQU1DLEtBQVFMLEVBQVFFLE1BQU9HLElBQ2pDTCxFQUFRRSxNQUFNSSxRQUNkTixFQUFRQyxRQUFVLE1BRXRCRyxRQUFRQyxHQUNtQixPQUFwQkwsRUFBUUMsVUFDUEQsRUFBUUMsUUFBVU0sV0FBV1AsRUFBUVEsUUFBUyxJQUNsRFIsRUFBUUUsTUFBTU8sSUFBSUosS0FJcEJLLEVBQVUsU0FBU0MsRUFBS0MsTUFDMUIsTUFBTUMsTUFDRkEsRUFBUSxLQUFJQyxPQUFFQSxFQUFTLEtBQUlDLE1BQUVBLEdBQVEsRUFBS0MsS0FBRUEsR0FBTyxHQUNuREosRUFFSixPQUFHRCxFQUFJTSxXQUFtQk4sR0FFMUJqQixFQUFhd0IsSUFBSVAsRUFBSyxJQUFJUSxLQUMxQkgsR0FBUUksT0FBT0MsUUFBUVYsR0FBS1csUUFBUSxFQUFFQyxFQUFLQyxNQUNwQzVCLEVBQU00QixLQUFNYixFQUFJWSxHQUFPYixFQUFRYyxFQUFLWixNQUdwQyxJQUFJYSxNQUFNZCxHQUNiUCxJQUFJc0IsRUFBR0MsR0FDSCxHQUFZLGVBQVRBLEVBQXVCLE9BQU8sRUFFakMsS0FBS2QsR0FBU0EsRUFBTWUsU0FBU0QsT0FBWWIsSUFBV0EsRUFBT2MsU0FBU0QsS0FDN0RsQyxFQUFjb0MsT0FBUSxDQUNyQixNQUFNQyxFQUFjcEMsRUFBYXFDLElBQUlwQixHQUNqQ21CLEVBQVlFLElBQUlMLElBQ2hCRyxFQUFZWixJQUFJUyxFQUFNLElBQUl4QixLQUM5QjJCLEVBQVlDLElBQUlKLEdBQU1sQixJQUFJaEIsRUFBYyxJQUloRCxPQUFPa0IsRUFBSWdCLElBRWZ2QixJQUFJc0IsRUFBR0MsRUFBTU0sR0FDVCxNQUFNSCxFQUFjcEMsRUFBYXFDLElBQUlwQixHQUVyQyxLQUFLYixFQUFRYSxJQUFpQixXQUFUZ0IsSUFBc0JoQixFQUFJZ0IsS0FBVU0sRUFBTyxPQUFPLEVBR3ZFLEdBRkF0QixFQUFJZ0IsR0FBUVgsR0FBUXBCLEVBQU1xQyxHQUFTdkIsRUFBUXVCLEVBQU9yQixHQUFXcUIsSUFFeERwQixHQUFTQSxFQUFNZSxTQUFTRCxPQUFZYixJQUFXQSxFQUFPYyxTQUFTRCxLQUM3REcsRUFBWUUsSUFBSUwsR0FBTyxDQUN0QixNQUFNTyxFQUFhSixFQUFZQyxJQUFJSixHQUNuQyxJQUFJLE1BQU1RLEtBQWFELEVBQ2hCQyxFQUFVQyxXQUNURixFQUFXRyxPQUFPRixHQUNaQSxJQUFjMUMsRUFBYyxLQUMvQnNCLEVBQU9mLEVBQVFzQyxRQUFRSCxHQUNyQkEsS0FLckIsT0FBTyxjQU1mekIsUUFBQUEsRUFDQTZCLFNBM0ZhLFNBQVNDLEdBQUtDLFFBQUVBLEdBQVUsRUFBSUMsU0FBRUEsRUFBVyxVQUN4RCxNQUFNQyxFQUFRLElBQUlsQixNQUFNZSxHQUNwQnBDLE1BQU13QyxFQUFRQyxFQUFTQyxHQUNuQixNQUFNQyxFQUFxQixDQUFDUCxFQUFNLFFBQzlCL0MsRUFBY3VELFFBQVFOLEdBQVlDLEdBQ2xDLE1BQU1NLEVBQVNULEVBQU1BLElBQVFJLEVBQU9NLE1BQU1MLEVBQVNDLEdBRW5ELE9BREFyRCxFQUFjMEQsUUFDUEYsR0FPWCxPQUpBSCxFQUFTTSxNQUNMQyxhQUFjVCxHQUFVRyxFQUFtQkgsS0FHeENHLE9BSWYsT0FER04sR0FBU0UsSUFDTEEsR0EwRVBXLFFBdkVZNUIsR0FBS0EsRUFBRVUsWUFBYSJ9
