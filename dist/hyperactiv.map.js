!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.hyperactiv=t()}(this,function(){"use strict";const e=[],t=new WeakMap,n=e=>"object"==typeof e,u=Array.isArray,o={timeout:null,queue:new Set,process(){for(const e of o.queue)e();o.queue.clear(),o.timeout=null},enqueue(e){null===o.timeout&&(o.timeout=setTimeout(o.process,0)),o.queue.add(e)}},s=function(r,c={}){const{props:i=null,ignore:l=null,batch:d=!1,deep:f=!1}=c;return r.__observed?r:(t.set(r,new Map),f&&Object.entries(r).forEach(([e,t])=>{n(t)&&(r[e]=s(t,c))}),new Proxy(r,{get(n,u){if("__observed"===u)return!0;if((!i||i.includes(u))&&(!l||!l.includes(u))&&e.length){const n=t.get(r);n.has(u)||n.set(u,new Set),n.get(u).add(e[0])}return r[u]},set(p,a,y){const h=t.get(r);if((!u(r)||"length"!==a)&&r[a]===y)return!0;if(r[a]=f&&n(y)?s(y,c):y,(!i||i.includes(a))&&(!l||!l.includes(a))&&h.has(a)){const t=h.get(a);for(const n of t)n.__disposed?t.delete(n):n!==e[0]&&(d?o.enqueue(n):n())}return!0}}))};return{observe:s,computed:function(t,{autoRun:n=!0,callback:u=null}={}){const o=new Proxy(t,{apply(t,n,s){const r=(r=null)=>{e.unshift(u||o);const c=r?r():t.apply(n,s);return e.shift(),c};return s.push({computeAsync:e=>r(e)}),r()}});return n&&o(),o},dispose:e=>e.__disposed=!0}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHlwZXJhY3Rpdi5tYXAuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wdXRlZFN0YWNrID0gW11cbmNvbnN0IG9ic2VydmVyc01hcCA9IG5ldyBXZWFrTWFwKClcblxuY29uc3QgaXNPYmogPSBvID0+IHR5cGVvZiBvID09PSAnb2JqZWN0J1xuY29uc3QgaXNBcnJheSA9IEFycmF5LmlzQXJyYXlcblxuY29uc3QgY29tcHV0ZWQgPSBmdW5jdGlvbihmdW4sIHsgYXV0b1J1biA9IHRydWUsIGNhbGxiYWNrID0gbnVsbCB9ID0ge30pIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShmdW4sIHtcbiAgICAgICAgYXBwbHkodGFyZ2V0LCB0aGlzQXJnLCBhcmdzTGlzdCkge1xuICAgICAgICAgICAgY29uc3QgcGVyZm9ybUNvbXB1dGF0aW9uID0gKGZ1biA9IG51bGwpID0+IHtcbiAgICAgICAgICAgICAgICBjb21wdXRlZFN0YWNrLnVuc2hpZnQoY2FsbGJhY2sgfHwgcHJveHkpXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZnVuID8gZnVuKCkgOiB0YXJnZXQuYXBwbHkodGhpc0FyZywgYXJnc0xpc3QpXG4gICAgICAgICAgICAgICAgY29tcHV0ZWRTdGFjay5zaGlmdCgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhcmdzTGlzdC5wdXNoKHtcbiAgICAgICAgICAgICAgICBjb21wdXRlQXN5bmM6IHRhcmdldCA9PiBwZXJmb3JtQ29tcHV0YXRpb24odGFyZ2V0KVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgcmV0dXJuIHBlcmZvcm1Db21wdXRhdGlvbigpXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGlmKGF1dG9SdW4pIHByb3h5KClcbiAgICByZXR1cm4gcHJveHlcbn1cblxuY29uc3QgZGlzcG9zZSA9IF8gPT4gXy5fX2Rpc3Bvc2VkID0gdHJ1ZVxuXG5jb25zdCBiYXRjaGVyID0ge1xuICAgIHRpbWVvdXQ6IG51bGwsXG4gICAgcXVldWU6IG5ldyBTZXQoKSxcbiAgICBwcm9jZXNzKCkge1xuICAgICAgICBmb3IoY29uc3QgdGFzayBvZiBiYXRjaGVyLnF1ZXVlKSB0YXNrKClcbiAgICAgICAgYmF0Y2hlci5xdWV1ZS5jbGVhcigpXG4gICAgICAgIGJhdGNoZXIudGltZW91dCA9IG51bGxcbiAgICB9LFxuICAgIGVucXVldWUodGFzaykge1xuICAgICAgICBpZihiYXRjaGVyLnRpbWVvdXQgPT09IG51bGwpXG4gICAgICAgICAgICBiYXRjaGVyLnRpbWVvdXQgPSBzZXRUaW1lb3V0KGJhdGNoZXIucHJvY2VzcywgMClcbiAgICAgICAgYmF0Y2hlci5xdWV1ZS5hZGQodGFzaylcbiAgICB9XG59XG5cbmNvbnN0IG9ic2VydmUgPSBmdW5jdGlvbihvYmosIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHtcbiAgICAgICAgcHJvcHMgPSBudWxsLCBpZ25vcmUgPSBudWxsLCBiYXRjaCA9IGZhbHNlLCBkZWVwID0gZmFsc2VcbiAgICB9ID0gb3B0aW9uc1xuXG4gICAgaWYob2JqLl9fb2JzZXJ2ZWQpIHJldHVybiBvYmpcblxuICAgIG9ic2VydmVyc01hcC5zZXQob2JqLCBuZXcgTWFwKCkpXG4gICAgZGVlcCAmJiBPYmplY3QuZW50cmllcyhvYmopLmZvckVhY2goKFtrZXksIHZhbF0pID0+IHtcbiAgICAgICAgaWYoaXNPYmoodmFsKSkgb2JqW2tleV0gPSBvYnNlcnZlKHZhbCwgb3B0aW9ucylcbiAgICB9KVxuXG4gICAgcmV0dXJuIG5ldyBQcm94eShvYmosIHtcbiAgICAgICAgZ2V0KF8sIHByb3ApIHtcbiAgICAgICAgICAgIGlmKHByb3AgPT09ICdfX29ic2VydmVkJykgcmV0dXJuIHRydWVcblxuICAgICAgICAgICAgaWYoKCFwcm9wcyB8fCBwcm9wcy5pbmNsdWRlcyhwcm9wKSkgJiYgKCFpZ25vcmUgfHwgIWlnbm9yZS5pbmNsdWRlcyhwcm9wKSkpIHtcbiAgICAgICAgICAgICAgICBpZihjb21wdXRlZFN0YWNrLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvYnNlcnZlck1hcCA9IG9ic2VydmVyc01hcC5nZXQob2JqKVxuICAgICAgICAgICAgICAgICAgICBpZighb2JzZXJ2ZXJNYXAuaGFzKHByb3ApKVxuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXJNYXAuc2V0KHByb3AsIG5ldyBTZXQoKSlcbiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXJNYXAuZ2V0KHByb3ApLmFkZChjb21wdXRlZFN0YWNrWzBdKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG9ialtwcm9wXVxuICAgICAgICB9LFxuICAgICAgICBzZXQoXywgcHJvcCwgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyTWFwID0gb2JzZXJ2ZXJzTWFwLmdldChvYmopXG5cbiAgICAgICAgICAgIGlmKCghaXNBcnJheShvYmopIHx8IHByb3AgIT09ICdsZW5ndGgnKSAmJiBvYmpbcHJvcF0gPT09IHZhbHVlKSByZXR1cm4gdHJ1ZVxuICAgICAgICAgICAgb2JqW3Byb3BdID0gZGVlcCAmJiBpc09iaih2YWx1ZSkgPyBvYnNlcnZlKHZhbHVlLCBvcHRpb25zKSA6IHZhbHVlXG5cbiAgICAgICAgICAgIGlmKCghcHJvcHMgfHwgcHJvcHMuaW5jbHVkZXMocHJvcCkpICYmICghaWdub3JlIHx8ICFpZ25vcmUuaW5jbHVkZXMocHJvcCkpKSB7XG4gICAgICAgICAgICAgICAgaWYob2JzZXJ2ZXJNYXAuaGFzKHByb3ApKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlcGVuZGVudHMgPSBvYnNlcnZlck1hcC5nZXQocHJvcClcbiAgICAgICAgICAgICAgICAgICAgZm9yKGNvbnN0IGRlcGVuZGVudCBvZiBkZXBlbmRlbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihkZXBlbmRlbnQuX19kaXNwb3NlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcGVuZGVudHMuZGVsZXRlKGRlcGVuZGVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihkZXBlbmRlbnQgIT09IGNvbXB1dGVkU3RhY2tbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihiYXRjaCkgYmF0Y2hlci5lbnF1ZXVlKGRlcGVuZGVudClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGRlcGVuZGVudCgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgfSlcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIG9ic2VydmUsXG4gICAgY29tcHV0ZWQsXG4gICAgZGlzcG9zZVxufSJdLCJuYW1lcyI6WyJjb21wdXRlZFN0YWNrIiwib2JzZXJ2ZXJzTWFwIiwiV2Vha01hcCIsImlzT2JqIiwibyIsImlzQXJyYXkiLCJBcnJheSIsImJhdGNoZXIiLCJ0aW1lb3V0IiwicXVldWUiLCJTZXQiLCJbb2JqZWN0IE9iamVjdF0iLCJ0YXNrIiwiY2xlYXIiLCJzZXRUaW1lb3V0IiwicHJvY2VzcyIsImFkZCIsIm9ic2VydmUiLCJvYmoiLCJvcHRpb25zIiwicHJvcHMiLCJpZ25vcmUiLCJiYXRjaCIsImRlZXAiLCJfX29ic2VydmVkIiwic2V0IiwiTWFwIiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJrZXkiLCJ2YWwiLCJQcm94eSIsIl8iLCJwcm9wIiwiaW5jbHVkZXMiLCJsZW5ndGgiLCJvYnNlcnZlck1hcCIsImdldCIsImhhcyIsInZhbHVlIiwiZGVwZW5kZW50cyIsImRlcGVuZGVudCIsIl9fZGlzcG9zZWQiLCJkZWxldGUiLCJlbnF1ZXVlIiwiY29tcHV0ZWQiLCJmdW4iLCJhdXRvUnVuIiwiY2FsbGJhY2siLCJwcm94eSIsInRhcmdldCIsInRoaXNBcmciLCJhcmdzTGlzdCIsInBlcmZvcm1Db21wdXRhdGlvbiIsInVuc2hpZnQiLCJyZXN1bHQiLCJhcHBseSIsInNoaWZ0IiwicHVzaCIsImNvbXB1dGVBc3luYyIsImRpc3Bvc2UiXSwibWFwcGluZ3MiOiJzTEFBQSxNQUFNQSxLQUNBQyxFQUFlLElBQUlDLFFBRW5CQyxFQUFRQyxHQUFrQixpQkFBTkEsRUFDcEJDLEVBQVVDLE1BQU1ELFFBeUJoQkUsR0FDRkMsUUFBUyxLQUNUQyxNQUFPLElBQUlDLElBQ1hDLFVBQ0ksSUFBSSxNQUFNQyxLQUFRTCxFQUFRRSxNQUFPRyxJQUNqQ0wsRUFBUUUsTUFBTUksUUFDZE4sRUFBUUMsUUFBVSxNQUV0QkcsUUFBUUMsR0FDbUIsT0FBcEJMLEVBQVFDLFVBQ1BELEVBQVFDLFFBQVVNLFdBQVdQLEVBQVFRLFFBQVMsSUFDbERSLEVBQVFFLE1BQU1PLElBQUlKLEtBSXBCSyxFQUFVLFNBQVNDLEVBQUtDLE1BQzFCLE1BQU1DLE1BQ0ZBLEVBQVEsS0FBSUMsT0FBRUEsRUFBUyxLQUFJQyxNQUFFQSxHQUFRLEVBQUtDLEtBQUVBLEdBQU8sR0FDbkRKLEVBRUosT0FBR0QsRUFBSU0sV0FBbUJOLEdBRTFCakIsRUFBYXdCLElBQUlQLEVBQUssSUFBSVEsS0FDMUJILEdBQVFJLE9BQU9DLFFBQVFWLEdBQUtXLFFBQVEsRUFBRUMsRUFBS0MsTUFDcEM1QixFQUFNNEIsS0FBTWIsRUFBSVksR0FBT2IsRUFBUWMsRUFBS1osTUFHcEMsSUFBSWEsTUFBTWQsR0FDYlAsSUFBSXNCLEVBQUdDLEdBQ0gsR0FBWSxlQUFUQSxFQUF1QixPQUFPLEVBRWpDLEtBQUtkLEdBQVNBLEVBQU1lLFNBQVNELE9BQVliLElBQVdBLEVBQU9jLFNBQVNELEtBQzdEbEMsRUFBY29DLE9BQVEsQ0FDckIsTUFBTUMsRUFBY3BDLEVBQWFxQyxJQUFJcEIsR0FDakNtQixFQUFZRSxJQUFJTCxJQUNoQkcsRUFBWVosSUFBSVMsRUFBTSxJQUFJeEIsS0FDOUIyQixFQUFZQyxJQUFJSixHQUFNbEIsSUFBSWhCLEVBQWMsSUFJaEQsT0FBT2tCLEVBQUlnQixJQUVmdkIsSUFBSXNCLEVBQUdDLEVBQU1NLEdBQ1QsTUFBTUgsRUFBY3BDLEVBQWFxQyxJQUFJcEIsR0FFckMsS0FBS2IsRUFBUWEsSUFBaUIsV0FBVGdCLElBQXNCaEIsRUFBSWdCLEtBQVVNLEVBQU8sT0FBTyxFQUd2RSxHQUZBdEIsRUFBSWdCLEdBQVFYLEdBQVFwQixFQUFNcUMsR0FBU3ZCLEVBQVF1QixFQUFPckIsR0FBV3FCLElBRXhEcEIsR0FBU0EsRUFBTWUsU0FBU0QsT0FBWWIsSUFBV0EsRUFBT2MsU0FBU0QsS0FDN0RHLEVBQVlFLElBQUlMLEdBQU8sQ0FDdEIsTUFBTU8sRUFBYUosRUFBWUMsSUFBSUosR0FDbkMsSUFBSSxNQUFNUSxLQUFhRCxFQUNoQkMsRUFBVUMsV0FDVEYsRUFBV0csT0FBT0YsR0FDWkEsSUFBYzFDLEVBQWMsS0FDL0JzQixFQUFPZixFQUFRc0MsUUFBUUgsR0FDckJBLEtBS3JCLE9BQU8sY0FNZnpCLFFBQUFBLEVBQ0E2QixTQTNGYSxTQUFTQyxHQUFLQyxRQUFFQSxHQUFVLEVBQUlDLFNBQUVBLEVBQVcsVUFDeEQsTUFBTUMsRUFBUSxJQUFJbEIsTUFBTWUsR0FDcEJwQyxNQUFNd0MsRUFBUUMsRUFBU0MsR0FDbkIsTUFBTUMsRUFBcUIsQ0FBQ1AsRUFBTSxRQUM5Qi9DLEVBQWN1RCxRQUFRTixHQUFZQyxHQUNsQyxNQUFNTSxFQUFTVCxFQUFNQSxJQUFRSSxFQUFPTSxNQUFNTCxFQUFTQyxHQUVuRCxPQURBckQsRUFBYzBELFFBQ1BGLEdBT1gsT0FKQUgsRUFBU00sTUFDTEMsYUFBY1QsR0FBVUcsRUFBbUJILEtBR3hDRyxPQUlmLE9BREdOLEdBQVNFLElBQ0xBLEdBMEVQVyxRQXZFWTVCLEdBQUtBLEVBQUVVLFlBQWEifQ==
